version: "1.0"

services:

  zookeeper-1:
    container_name: zookeeper-1
    image: lambda/zookeeper:2.7.0
    build:
      context: ./zookeeper-docker
    volumes:
    - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
    - ./data/zookeeper-1/:/tmp/zookeeper/
    networks:
    - kafka-net

  kafka-1:
    container_name: kafka-1
    image: lambda/kafka:2.7.0
    build: 
      context: .
    volumes:
    - ./config/kafka-1/server.properties:/kafka/config/server.properties
    - ./data/kafka-1/:/tmp/kafka-logs/
    networks:
    - kafka-net

  kafka-2:
    container_name: kafka-2
    image: lambda/kafka:2.7.0
    build: 
      context: .
    volumes:
    - ./config/kafka-2/server.properties:/kafka/config/server.properties
    - ./data/kafka-2/:/tmp/kafka-logs/
    networks:
    - kafka-net

  kafka-3:
    container_name: kafka-3
    image: lambda/kafka:2.7.0
    build: 
      context: .
    volumes:
    - ./config/kafka-3/server.properties:/kafka/config/server.properties
    - ./data/kafka-3/:/tmp/kafka-logs/
    networks:
    - kafka-net

  # kafka-producer:
  #   container_name: kafka-producer
  #   image: lambda/kafka:2.7.0
  #   build: 
  #     context: .
  #   working_dir: /kafka
  #   entrypoint: /bin/bash
  #   stdin_open: true
  #   tty: true
  #   networks:
  #   - kafka-net

  # kafka-consumer:
  #   container_name: kafka-consumer
  #   image: lambda/kafka:2.7.0
  #   build: 
  #     context: .
  #   working_dir: /kafka
  #   entrypoint: /bin/bash
  #   stdin_open: true
  #   tty: true
  #   networks:
  #   - kafka-net

  # kafka-consumer-go:
  #   container_name: kafka-consumer-go
  #   image: lambda/kafka-consumer-go:1.0.0
  #   build: 
  #     context: ./applications/consumer
  #   environment:
  #   - "KAFKA_PEERS=kafka-1:9092,kafka-2:9092,kafka-3:9092"
  #   - "KAFKA_TOPIC=Orders"
  #   - "KAFKA_VERSION=2.7.0"
  #   - "KAFKA_GROUP=orders"
  #   networks:
  #   - kafka-net

networks: 
  kafka-net:
    name: kafka-net